---
import { Image } from "astro:assets";
import portrait1 from "../../assets/paintings/portraits/portrait1.jpg";
import portrait2 from "../../assets/paintings/portraits/portrait2.jpg";
import portrait3 from "../../assets/paintings/portraits/portrait3.jpg";
import portrait6 from "../../assets/paintings/portraits/portrait6.jpg";
import portrait8 from "../../assets/paintings/portraits/portrait8.jpg";

const paintings = [
  {
    index: 0,
    src: portrait1,
    alt: "portrait1",
    transform: "rotate3d(0, 1, 0, 25deg)",
  },
  {
    index: 1,
    src: portrait2,
    alt: "portrait2",
    transform: "rotate3d(0, 1, 0, 0deg)",
  },
  {
    index: 2,
    src: portrait3,
    alt: "portrait3",
    transform: "rotate3d(0, 0, 0, 0deg)",
  },
  {
    index: 3,
    src: portrait6,
    alt: "portrait4",
    transform: "rotate3d(0, 1, 0, 0deg)",
  },
  {
    index: 4,
    src: portrait8,
    alt: "portrait5",
    transform: "rotate3d(0, 1, 0, -25deg)",
  },
];
const { isReversed, filteredPaitings } = Astro.props;

const displayedPaintings =
  (filteredPaitings &&
    paintings.filter((painting) =>
      filteredPaitings.includes(painting.index)
    )) ||
  paintings;

const animate = "flex items-center justify-center md:justify-start  ";
---

<div class="overflow-hidden z-10 bg-white h-[40rem]">
  <div class="py-5 w-full inline-flex flex-nowrap overflow-hidden">
    <ul class={animate} style={{ perspective: "1000px" }}>
      {
        paintings.slice(0, 5).map((painting, index) => {
          return (
            <li
              class=" !m-0 w-[300px] h-4/5 overflow-hidden rounded-2xl relative shadow-xl  "
              style={{
                //rotate: `${(index - 2) * 4}deg`,
                //top: painting.top,
                scale: 1 + (index === 0 || index === 4 ? 0.02 : 0),
                transform: painting.transform,
              }}
            >
              <Image
                src={painting.src}
                class="  transition duration-200  object-scale-down shadow-xl  "
                alt={painting.alt}
                loading="lazy"
              />
            </li>
          );
        })
      }
    </ul>
  </div>
</div>
