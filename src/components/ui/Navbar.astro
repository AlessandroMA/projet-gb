---
import { Astronav, StickyHeader } from "astro-navbar";
const base = "/projet-gb/";
const menuitems = [
  { id: "home", href: "", label: "À propos" },
  { id: "services", href: "#services", label: "Services" },
  // { id: "cases", href: "#cases", label: "Succès" },
  // { id: "process", href: "#process", label: "Mode opératoire" },
  // { id: "team", href: "#team", label: "Équipe" },
  { id: "testimonials", href: "#testimonials", label: "Témoignages" },
  { id: "themes", href: "themes", label: "Thèmes" },
];
// Get me the selected button according to the route
---

<!-- <script>
  var previous = null;
  var displayActive = () => {
    // Get all the steps
    const steps = document.querySelectorAll("section");

    // Calculate the viewport height
    const viewportHeight = window.innerHeight;

    steps.forEach((step, index) => {
      const stepPosition = step.getBoundingClientRect().top;
      // If the step is within the viewport, make it visible and draw the line
      const idPrefix = step.id;
      const navId = idPrefix + "-active";
      const navItem = document.getElementById(navId);
      if (stepPosition < viewportHeight * 0.8) {
        if (navItem) {
          // You can adjust the trigger point
          navItem.classList.remove("hidden");
          navItem.classList.add("text-black"); /* 
          navItem.classList.add("rounded-2xl");
          navItem.classList.add("motion-translate-x-in-100");
          navItem.classList.add("motion-duration-[2s]");
          navItem.classList.add("motion-ease-spring-smooth"); */
        }
        if (!previous || previous !== navItem) {
          navItem.classList.add("hidden");
          navItem.classList.remio("text-black");
        }
        previous = navItem;
      }
    });
  };
  displayActive();
  window.addEventListener("scroll", displayActive);
</script> -->
<div class="">
  <nav
    class="z-10 w-full justify-center top-0 left-0 absolute bg-white bg-opacity-95 px-10 shadow-section"
  >
    <header class="flex flex-col lg:flex-row justify-between items-center p-4">
      <Astronav>
        <div class="flex w-full lg:w-auto items-center justify-between">
          <a
            href={base}
            class="flex items-center justify-center h-12 w-[11rem] rounded-full bg-white bg-opacity-50"
          >
            <img src="/projet-gb/logo_artesemys.png" class="h-9" alt="Logo" />
          </a>

          <div class="block lg:hidden">
            <div id="menu-icon" class="w-8 h-8 text-black cursor-pointer">
              <!-- Open (hamburger) icon -->
              <svg
                id="open-icon"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                class="w-8 h-8"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M4 6h16M4 12h16M4 18h16"></path>
              </svg>
              <!-- Close (X) icon -->
              <svg
                id="close-icon"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                class="w-8 h-8 hidden"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </div>
          </div>
        </div>

        <nav
          class="z-10 hidden w-full lg:w-auto mt-2 lg:flex lg:mt-0 text-dark h-[30px] items-center rounded-l-full rounded-r-full bg-white bg-opacity-50 backdrop-blur-[40px]"
          id="menu-items"
        >
          <ul
            class="font-medium flex flex-col p-4 lg:p-0 mt-4 border rounded-xl lg:flex-row lg:px-1 lg:mt-0 lg:border-0"
          >
            {
              menuitems.map((item) => (
                <div class="relative">
                  <div
                    id={item.id + "-active"}
                    class="bg-white h-[24px] w-full rounded-2xl absolute z-10 top-0 hidden"
                  />
                  <li class="px-3 ">
                    <a
                      href={base + item.href}
                      class="font-light text-sm uppercase mobile-nav-link block py-2 px-3  rounded lg:bg-transparent lg:p-0 "
                      data-close-menu="true"
                    >
                      {item.label}
                    </a>
                  </li>
                </div>
              ))
            }
            <!--  <div class="lg:hidden flex items-center justify-center mt-3 gap-4">
              <a
                class="mobile-nav-link px-9 py-5 rounded-2xl border border-zinc-900 bg-white hover:bg-black text-black hover:text-white inline-flex"
                href={navButton.href}
                data-close-menu="true"
              >
                <h2 class="text-center text-xl font-normal leading-7">
                  {navButton.label}
                </h2>
              </a>
            </div> -->
          </ul>
        </nav>
      </Astronav>

      <!--  <div>
        <div class="hidden lg:flex items-center gap-4">
          <a
            class="px-9 py-5 rounded-2xl border border-zinc-900 bg-white hover:bg-black text-black hover:text-white inline-flex"
            href={navButton.href}
          >
            <h2 class="text-center text-xl font-normal leading-7">
              {navButton.label}
            </h2>
          </a>
        </div>
      </div> -->
    </header>
  </nav>
</div>

<script is:inline>
  // Get references to the menu icon, open/close icons, and menu items
  const menuIcon = document.getElementById("menu-icon");
  const openIcon = document.getElementById("open-icon");
  const closeIcon = document.getElementById("close-icon");
  const menuItems = document.getElementById("menu-items");
  const closeMenuItems = document.querySelectorAll('[data-close-menu="true"]'); // Select all items with the 'data-close-menu' attribute

  // Toggle the menu visibility and icon when the menu icon is clicked
  menuIcon.addEventListener("click", () => {
    menuItems.classList.toggle("hidden"); // Toggle the 'hidden' class on the menu

    // Toggle between open and close icons
    openIcon.classList.toggle("hidden");
    closeIcon.classList.toggle("hidden");
  });

  // Close the menu when any item is clicked
  closeMenuItems.forEach((item) => {
    item.addEventListener("click", () => {
      menuItems.classList.add("hidden"); // Add the 'hidden' class to hide the menu
      openIcon.classList.remove("hidden"); // Show the open (hamburger) icon
      closeIcon.classList.add("hidden"); // Hide the close (X) icon
    });
  });
</script>
